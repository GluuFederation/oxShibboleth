diff --git a/idp-parent/pom.xml b/idp-parent/pom.xml
index 5301dd763..f26e3c3e1 100644
--- a/idp-parent/pom.xml
+++ b/idp-parent/pom.xml
@@ -22,6 +22,14 @@
     <version>4.3.1</version>
     <packaging>pom</packaging>
 
+    <repositories>
+        <repository>
+            <id>shib</id>
+            <name>Shib</name>
+            <url>https://build.shibboleth.net/nexus/content/repositories/releases/</url>
+        </repository>
+    </repositories>
+
     <modules>
         <module>../idp-core</module>
         <module>../idp-schema</module>
diff --git a/idp-authn-api/src/main/java/net/shibboleth/idp/authn/ExternalAuthentication.java b/idp-authn-api/src/main/java/net/shibboleth/idp/authn/ExternalAuthentication.java
index a609d239f..d8a64fe8c 100644
--- a/idp-authn-api/src/main/java/net/shibboleth/idp/authn/ExternalAuthentication.java
+++ b/idp-authn-api/src/main/java/net/shibboleth/idp/authn/ExternalAuthentication.java
@@ -41,7 +41,7 @@ import net.shibboleth.utilities.java.support.annotation.constraint.NotEmpty;
 import net.shibboleth.utilities.java.support.logic.Constraint;
 
 /** Public interface supporting external authentication outside the webflow engine. */
-public abstract class ExternalAuthentication {
+public abstract class ExternalAuthentication implements java.io.IOException {
 
     /** Parameter supplied to locate the SWF object needed in the servlet context. */
     @Nonnull @NotEmpty public static final String SWF_KEY = "net.shibboleth.idp.flowExecutor";
diff --git a/idp-authn-api/src/main/java/net/shibboleth/idp/authn/principal/CloneablePrincipal.java b/idp-authn-api/src/main/java/net/shibboleth/idp/authn/principal/CloneablePrincipal.java
index 044a34217..9966ecc42 100644
--- a/idp-authn-api/src/main/java/net/shibboleth/idp/authn/principal/CloneablePrincipal.java
+++ b/idp-authn-api/src/main/java/net/shibboleth/idp/authn/principal/CloneablePrincipal.java
@@ -20,7 +20,7 @@ package net.shibboleth.idp.authn.principal;
 import java.security.Principal;
 
 /** Principal that can be cloned without knowledge of the underlying type. */
-public interface CloneablePrincipal extends Principal, Cloneable {
+public interface CloneablePrincipal extends Principal, Cloneable, java.io.Serializable {
 
     /**
      * Creates and returns a copy of this object.
diff --git a/idp-authn-api/src/main/java/net/shibboleth/idp/authn/principal/PrincipalServiceManager.java b/idp-authn-api/src/main/java/net/shibboleth/idp/authn/principal/PrincipalServiceManager.java
index 02cc83bce..51beac25f 100644
--- a/idp-authn-api/src/main/java/net/shibboleth/idp/authn/principal/PrincipalServiceManager.java
+++ b/idp-authn-api/src/main/java/net/shibboleth/idp/authn/principal/PrincipalServiceManager.java
@@ -42,7 +42,7 @@ import net.shibboleth.utilities.java.support.annotation.constraint.Unmodifiable;
  * 
  * @since 4.1.0
  */
-public class PrincipalServiceManager {
+public class PrincipalServiceManager implements java.io.Serializable {
     
     /** Class logger. */
     @Nonnull private final Logger log = LoggerFactory.getLogger(PrincipalServiceManager.class);
diff --git a/idp-saml-api/src/main/java/net/shibboleth/idp/saml/metadata/IdPUIInfo.java b/idp-saml-api/src/main/java/net/shibboleth/idp/saml/metadata/IdPUIInfo.java
index 7f0a2e52d..8ae88d21a 100644
--- a/idp-saml-api/src/main/java/net/shibboleth/idp/saml/metadata/IdPUIInfo.java
+++ b/idp-saml-api/src/main/java/net/shibboleth/idp/saml/metadata/IdPUIInfo.java
@@ -41,7 +41,7 @@ import net.shibboleth.utilities.java.support.collection.CollectionSupport;
 
 /**
  * Class to contain a processed form of the {@link UIInfo} suitable for display purposes. */
-public class IdPUIInfo {
+public class IdPUIInfo implements java.io.Serializable {
     
     /** logger. */
     private static final Logger LOG = LoggerFactory.getLogger(IdPUIInfo.class);
diff --git a/idp-saml-api/src/main/java/net/shibboleth/idp/saml/profile/config/SAMLArtifactConfiguration.java b/idp-saml-api/src/main/java/net/shibboleth/idp/saml/profile/config/SAMLArtifactConfiguration.java
index fda5af020..3bafc604e 100644
--- a/idp-saml-api/src/main/java/net/shibboleth/idp/saml/profile/config/SAMLArtifactConfiguration.java
+++ b/idp-saml-api/src/main/java/net/shibboleth/idp/saml/profile/config/SAMLArtifactConfiguration.java
@@ -25,7 +25,7 @@ import javax.annotation.Nullable;
  * <p>While sufficient for known SAML 1 and 2 artifact types, the interface
  * may be extended if necessary to carry type-specific additions.</p>
  */
-public interface SAMLArtifactConfiguration {
+public interface SAMLArtifactConfiguration extends java.io.Serializable {
 
     /**
      * Get the type code of the artifact to use.
diff --git a/idp-saml-api/src/main/java/net/shibboleth/idp/saml/profile/config/logic/AllowedSAMLPresentersPredicate.java b/idp-saml-api/src/main/java/net/shibboleth/idp/saml/profile/config/logic/AllowedSAMLPresentersPredicate.java
index 0877d0930..3c3382ad0 100644
--- a/idp-saml-api/src/main/java/net/shibboleth/idp/saml/profile/config/logic/AllowedSAMLPresentersPredicate.java
+++ b/idp-saml-api/src/main/java/net/shibboleth/idp/saml/profile/config/logic/AllowedSAMLPresentersPredicate.java
@@ -37,7 +37,7 @@ import org.slf4j.LoggerFactory;
  * Predicate which evaluates the inbound {@link SAMLPresenterEntityContext#getEntityId()}
  * against a specified collection of entityIDs.
  */
-public class AllowedSAMLPresentersPredicate implements Predicate<ProfileRequestContext> {
+public class AllowedSAMLPresentersPredicate implements Predicate<ProfileRequestContext>, java.io.Serializable {
     
     /** Logger. */
     @Nonnull private Logger log = LoggerFactory.getLogger(AllowedSAMLPresentersPredicate.class);
